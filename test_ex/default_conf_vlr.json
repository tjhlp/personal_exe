{
   "initiator": {
       "role": "guest",
       "party_id": 10006
   },
   "job_parameters": {
       "work_mode": 1,
       "processors_per_node": 1
   },
   "role": {
       "guest": [10006],
       "host": [10006],
       "arbiter": [10006]
   },
   "role_parameters": {
       "guest": {
           "args": {
               "data": {
                   "train_data": [{"name": "cmb_features", "namespace": "cmb2gov"}],
                   "eval_data": [{"name": "cmb_features", "namespace": "cmb2gov"}]
               }
           },
           "dataio_0":{
               "with_label": [true],
               "label_name": ["y"],
               "label_type": ["int"],
               "output_format": ["dense"],
               "missing_fill": [true],
               "missing_fill_method": ["min"]
           },
           "feature_scale_0": {
             "method": ["standard_scale"],
             "need_run": [false]
         },
           "evaluation_0": {
             "eval_type": ["binary"],
             "pos_label": [1]
           }
       },
       "host": {
           "args": {
               "data": {
                   "train_data": [{"name": "gov_features", "namespace": "cmb2gov"}],
                   "eval_data": [{"name": "gov_features", "namespace": "cmb2gov"}]
               }
           },
            "dataio_0":{
               "with_label": [false],
               "output_format": ["dense"],
               "missing_fill": [true],
               "outlier_replace": [true]
           },
           "feature_scale_0": {
             "method": ["standard_scale"],
             "need_run": [false]
         }
       }
   },
   "algorithm_parameters": {
     "hetero_lr_0": {
       "penalty": "L2",
       "optimizer": "sqn",
       "tol": 1e-4,
       "alpha": 0.01,
       "max_iter": 30,
       "early_stop": "weight_diff",
       "batch_size": -1,
       "learning_rate": 0.15,
       "init_param": {
         "init_method": "random_uniform"
       },
       "sqn_param": {
         "update_interval_L": 3,
         "memory_M": 5,
         "sample_size": 10,
         "random_seed": null
       },
       "cv_param": {
         "n_splits": 5,
         "shuffle": false,
         "random_seed": 103,
         "need_cv": false,
         "evaluate_param": {
           "eval_type": "binary"
         }
       }
     },
     "intersect_0": {
     "intersect_method": "rsa",
     "sync_intersect_ids": true,
     "only_output_key": false
   }
 }
}
