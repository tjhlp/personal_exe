# -*- coding: utf-8 -*-
# File              : test_table.py
# Author            : tjh
# Create Date       : 2020/11/05
# Last Modified Date: 2020/11/05
# Last Modified By  : tjh
# Reference         :
# Description       :
# ******************************************************

data1 = {'日期': [{'年': []},
                {'月': []},
                {'日': []}],
         '处罚依据': [
             {'条例名称': [{'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'}, {'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'},
                       {'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'}, {'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'},
                       {'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'}, {'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'},
                       {'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'}, {'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'},
                       {'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'}, {'深圳经济特区市容和环境卫生管理条例': '深圳经济特区市容和环境卫生管理条例'}]}, {
                 '条': [{'三十五条': '三十五条'}, {'二十二条': '二十二条'}, {'三十五条': '三十五条'}, {'22条': '22条'}, {'三十五条': '三十五条'},
                       {'三十五条': '三十五条'},
                       {'三十五条': '三十五条'}, {'三十五条': '三十五条'}, {'二十二条': '二十二条'}, {'22条': '22条'}, {'五十七条': '五十七条'},
                       {'三十五条': '三十五条'},
                       {'三十五条': '三十五条'}, {'三十五条': '三十五条'}, {'三十五条': '三十五条'}, {'二十二条': '二十二条'}, {'三十三条的规定。': '三十三条的规定。'},
                       {'三十五条': '三十五条'}, {'二十二条': '二十二条'}, {'三十五条': '三十五条'}, {'四十八条': '四十八条'}, {'二十二条': '二十二条'},
                       {'二十二条': '二十二条'}, {'三十九条': '三十九条'}, {'二十二条': '二十二条'}, {'三十五条': '三十五条'}, {'三十八条': '三十八条'},
                       {'三十五条': '三十五条'}, {'三十五条': '三十五条'}, {'22条': '22条'}, {'三十五条': '三十五条'}]}, {
                 '款': [{'二': '二'}, {'二': '二'}, {'二': '二'}, {'2': '2'}, {'二': '二'}, {'二': '二'}, {'二': '二'}, {'二': '二'},
                       {'二': '二'}, {'2': '2'}]}]}

data2 = {'job_dsl': {'components': {'dataio_0': {'module': 'DataIO', 'input': {'data': {'data': ['args.train_data']}},
                                                 'output': {'data': ['train'], 'model': ['dataio']}},
                                    'intersection_0': {'module': 'Intersection',
                                                       'input': {'data': {'data': ['dataio_0.train']}},
                                                       'output': {'data': ['intersect_train']}},
                                    'feature_scale_0': {'module': 'FeatureScale',
                                                        'input': {'data': {'data': ['intersection_0.intersect_train']}},
                                                        'output': {'data': ['scale_train'],
                                                                   'model': ['feature_scale']}},
                                    'hetero_lr_0': {'module': 'HeteroLR',
                                                    'input': {'data': {'train_data': ['feature_scale_0.scale_train']}},
                                                    'output': {'data': ['trained_data'], 'model': ['hetero_lr']}},
                                    'evaluation_0': {'module': 'Evaluation',
                                                     'input': {'data': {'data': ['hetero_lr_0.trained_data']}}}}},
         'job_runtime_conf': {'initiator': {'role': 'guest', 'party_id': 16899},
                              'job_parameters': {'work_mode': 1, 'processors_per_node': 1},
                              'role': {'guest': [16899], 'host': [16899], 'arbiter': [16899]}, 'role_parameters': {
                 'guest': {'args': {'data': {'train_data': [{'name': 'breast_hetero_mini_guest', 'namespace': 'test'}],
                                             'eval_data': [{'name': 'breast_hetero_mini_guest', 'namespace': 'test'}]}},
                           'dataio_0': {'with_label': [True], 'label_name': ['y'], 'label_type': ['int'],
                                        'output_format': ['dense'], 'missing_fill': [True],
                                        'missing_fill_method': ['min']},
                           'feature_scale_0': {'method': ['standard_scale'], 'need_run': [False]},
                           'evaluation_0': {'eval_type': ['binary'], 'pos_label': [1]}}, 'host': {'args': {
                     'data': {'train_data': [{'name': 'longhua_company_penalty', 'namespace': 'test'}],
                              'eval_data': [{'name': 'longhua_company_penalty', 'namespace': 'test'}]}}, 'dataio_0': {
                     'with_label': [False], 'output_format': ['dense'], 'missing_fill': [True],
                     'outlier_replace': [True]}, 'feature_scale_0': {'method': ['standard_scale'],
                                                                     'need_run': [False]}}}, 'algorithm_parameters': {
                 'hetero_lr_0': {'alpha': 0.01, 'batch_size': -1, 'cv_param': {
                     'evaluate_param': {'eval_type': 'binary', 'need_run': True, 'pos_label': 0}, 'n_splits': 5,
                     'need_cv': False, 'random_seed': 103, 'shuffle': False}, 'decay': 1, 'decay_sqrt': True,
                                 'early_stop': 'weight_diff', 'encrypt_param': {'method': None},
                                 'init_param': {'init_method': 'random_uniform'}, 'learning_rate': 0.15, 'max_iter': 30,
                                 'metrics': ['auc', 'ks'], 'optimizer': 'sgd', 'penalty': 'L2',
                                 'predict_param': {'threshold': 0.5, 'with_proba': True},
                                 'sqn_param': {'memory_M': 5, 'random_seed': None, 'sample_size': 5,
                                               'update_interval_L': 3}, 'tol': 0.0001, 'use_first_metrics_only': False,
                                 'validation_freqs': [10, 15]},
                 'intersect_0': {'intersect_method': 'rsa', 'sync_intersect_ids': True, 'only_output_key': False}}}}

data3 = {'initiator': {'role': 'guest', 'party_id': 16899},
         'job_parameters': {'work_mode': 1, 'processors_per_node': 1},
         'role': {'guest': [16899], 'host': [16899], 'arbiter': [16899]},
         'role_parameters': {'guest': {'args': {
             'data': {'train_data': [{'name': 'cmb_features', 'namespace': 'cmb2gov'}],
                      'eval_data': [{'name': 'cmb_features', 'namespace': 'cmb2gov'}]}},
             'dataio_0': {'with_label': [True],
                          'label_name': ['y'],
                          'label_type': ['int'],
                          'output_format': [
                              'dense'],
                          'missing_fill': [True],
                          'missing_fill_method': [
                              'min']},
             'feature_scale_0': {
                 'method': [
                     'standard_scale'],
                 'need_run': [
                     False]},
             'evaluation_0': {
                 'eval_type': [
                     'binary'],
                 'pos_label': [
                     1]}},
             'host': {'args': {
                 'data': {
                     'train_data': [{
                         'name': 'gov_features',
                         'namespace': 'cmb2gov'}],
                     'eval_data': [{
                         'name': 'gov_features',
                         'namespace': 'cmb2gov'}]}},
                 'dataio_0': {
                     'with_label': [
                         False],
                     'output_format': [
                         'dense'],
                     'missing_fill': [
                         True],
                     'outlier_replace': [
                         True]},
                 'feature_scale_0': {
                     'method': [
                         'standard_scale'],
                     'need_run': [
                         False]}}},
         'algorithm_parameters': {'hetero_lr_0': {'alpha': 0.01, 'batch_size': -1, 'cv_param': {
             'evaluate_param': {'eval_type': 'binary', 'need_run': True, 'pos_label': 0}, 'n_splits': 5,
             'need_cv': False, 'random_seed': 103, 'shuffle': False}, 'decay': 1, 'decay_sqrt': True,
                                                  'early_stop': 'weight_diff', 'encrypt_param': {'method': None},
                                                  'init_param': {'init_method': 'random_uniform'},
                                                  'learning_rate': 0.15, 'max_iter': 30, 'metrics': ['auc', 'ks'],
                                                  'optimizer': 'sgd', 'penalty': 'L2',
                                                  'predict_param': {'threshold': 0.5, 'with_proba': True},
                                                  'sqn_param': {'memory_M': 5, 'random_seed': None, 'sample_size': 5,
                                                                'update_interval_L': 3}, 'tol': 0.0001,
                                                  'use_first_metrics_only': False, 'validation_freqs': [10, 15]},
                                  'intersect_0': {'intersect_method': 'rsa', 'sync_intersect_ids': True,
                                                  'only_output_key': False}}}

data4 = {'姓名': ['刘丹', '刘云', '刘凯', '刘婷', '刘慧', '刘明', '刘杰', '刘桂兰', '刘桂英', '刘欢', '刘洋', '刘玉兰', '刘畅', '刘磊', '刘艳', '刘英', '刘莉',
                '刘霞', '刘静', '张倩', '张凯', '张勇', '张婷婷', '张帅', '张建', '张建国', '张强', '张慧', '张旭', '张林', '张桂珍', '张桂英', '张梅',
                '张浩', '张涛', '张玉', '张玉华', '张玉梅', '张玲', '张瑞', '张磊', '张秀云', '张艳', '张芳', '张鑫', '张霞', '李丹', '李健', '李兰英',
                '李兵', '李军', '李凯', '李刚', '李华', '李娜', '李婷', '李峰', '李平', '李建军', '李建华', '李彬', '李志强', '李想', '李慧', '李斌', '李林',
                '李桂芳', '李桂英', '李梅', '李欣', '李燕', '李玉华', '李琴', '李磊', '李秀云', '李秀梅', '李秀珍', '李红', '李红梅', '李莉', '李萍', '李超',
                '李鑫', '李雪梅', '杨军', '杨帆', '杨杰', '王东', '王丹', '王丽', '王丽丽', '王丽华', '王亮', '王伟', '王健', '王兰英', '王凤英', '王刚',
                '王勇', '王华', '王坤', '王建', '王慧', '王敏', '王旭', '王晶', '王桂珍', '王梅', '王浩', '王淑华', '王玉华', '王玉英', '王琳', '王秀云',
                '王红梅', '王艳', '王英', '王萍', '王超', '王鑫', '王雪', '王霞', '王静', '王飞', '陈云', '陈军', '陈刚', '陈勇', '陈林', '陈桂英', '陈玉兰',
                '陈艳', '陈芳', '陈英', '陈辉', '陈霞', '陈静', '高峰', '黄勇'],
         '身份证号': ['440222197401049418', '440224197705191312', '440229197211303721', '440232196712059619',
                  '440233197708098623', '440281198604012511', '440282197006289610', '440300197508245224',
                  '440301199301026510', '440303198911128516', '440304199511018119', '440305197307134617',
                  '440306196605045610', '440307197102185520', '440308199306308921', '440400199502239225',
                  '440401196207149015', '440402196102156412', '440403197508209719', '440404195803257814',
                  '440500198402245923', '44050119690507972X', '440507196106214326', '440511198101202125',
                  '440512197501292728', '440513198805218316', '440514196903022812', '440515198708081211',
                  '440523199301035523', '440600197511158628', '44060119580322462X', '440604199102014727',
                  '440605199208055311', '440606196603036314', '44060719750112491X', '440608199008144925',
                  '440700196501132622', '440701196012188718', '440703195903285921', '440704196311303510',
                  '440705198008131527', '440781196702255923', '440783199208106415', '440784198102247026',
                  '440785199201159026', '440800197303098912', '440801199406218410', '440802198202259710',
                  '440803197402128112', '440804198212194114', '440811199012191421', '44082319901009592X',
                  '440825195901269021', '440881197610309419', '440882199110277424', '440883199404091628',
                  '440900195912239119', '440901196208133623', '440902197306305729', '440903195710067314',
                  '440923196006274028', '440981196106187122', '440982199310017611', '440983195712308710',
                  '441200198703142910', '44120119921104701X', '441202197505026527', '44120319691213511X',
                  '441223196908114515', '441224197302236825', '441225198012068516', '441226196805183823',
                  '441283197704212810', '441284198905166224', '441300199003079817', '441301196908286425',
                  '441302196404289129', '441303197601204128', '441322198804079326', '441323198409083114',
                  '44132419591015411X', '441400199009036519', '441401197809194025', '441402196707106112',
                  '441421196502146117', '441422198310015910', '441423198008079929', '441424197301183623',
                  '441426196309213823', '441427198309062927', '441481196502148423', '441500197106054612',
                  '441501198303052321', '441502197105236913', '441521196512295316', '441523196607272121',
                  '441581198010277222', '441600198606034223', '441601195608112027', '441602199309268425',
                  '441621199306305921', '441622196007248129', '441623197003272010', '441624199004187419',
                  '441625199405079911', '441700196806032129', '441701198307212118', '441702199004019615',
                  '441721198911172525', '441723199510296125', '441781197811188525', '441800198107271623',
                  '441801195505074114', '441802195812193716', '441821199502137711', '441823198002235913',
                  '441825197609267916', '44182619801215802X', '441827197406156219', '441881199204223017',
                  '441882198202219624', '441900197810227020', '44200019860119292X', '445100196809101613',
                  '445101197103108819', '445102196409212621', '445121198206072416', '445122196702254229',
                  '445200198408203326', '445201198806116412', '445202198104302425', '445221199506307719',
                  '445222198311267617', '445224198801216914', '445281197503159426', '445300196212262210',
                  '44530119820925622X', '445302198110154322', '445321196212085210'],
         '贷款日期': ['2013/0/15', '2013/0/18', '2013/1/16', '2013/10/10', '2013/10/15', '2013/10/23', '2013/11/18',
                  '2013/12/24', '2013/2/11', '2013/2/12', '2013/2/4', '2013/3/2', '2013/5/22', '2013/5/24', '2013/5/4',
                  '2013/5/8', '2013/6/11', '2013/6/18', '2013/6/30', '2013/7/16', '2013/7/24', '2013/8/1', '2013/8/14',
                  '2013/8/22', '2013/9/23', '2013/9/28', '2014/0/19', '2014/0/3', '2014/0/6', '2014/1/5', '2014/10/3',
                  '2014/11/10', '2014/12/1', '2014/12/17', '2014/2/24', '2014/3/15', '2014/3/24', '2014/4/1',
                  '2014/4/28', '2014/5/6', '2014/6/11', '2014/7/19', '2014/8/23', '2014/8/5', '2014/9/2', '2014/9/27',
                  '2015/0/11', '2015/0/12', '2015/0/17', '2015/0/3', '2015/0/9', '2015/1/25', '2015/1/9', '2015/10/22',
                  '2015/10/4', '2015/10/7', '2015/11/12', '2015/12/28', '2015/12/5', '2015/2/10', '2015/2/15',
                  '2015/3/3', '2015/3/6', '2015/4/22', '2015/5/22', '2015/6/8', '2015/7/14', '2015/7/7', '2015/7/9',
                  '2015/8/15', '2015/9/26', '2016/0/19', '2016/0/24', '2016/1/4', '2016/10/13', '2016/10/3',
                  '2016/2/10', '2016/3/6', '2016/5/18', '2016/5/29', '2016/6/20', '2016/6/26', '2016/6/5', '2016/7/25',
                  '2016/7/27', '2016/7/29', '2016/9/1', '2017/0/22', '2017/0/3', '2017/1/18', '2017/1/19', '2017/1/29',
                  '2017/1/30', '2017/1/8', '2017/10/10', '2017/10/21', '2017/10/29', '2017/12/12', '2017/12/22',
                  '2017/12/5', '2017/2/19', '2017/2/22', '2017/2/8', '2017/3/9', '2017/4/29', '2017/4/6', '2017/4/7',
                  '2017/5/19', '2017/5/22', '2017/5/28', '2017/5/3', '2017/6/13', '2017/6/18', '2017/8/13', '2018/0/26',
                  '2018/1/14', '2018/1/16', '2018/1/23', '2018/1/7', '2018/10/7', '2018/11/12', '2018/11/25',
                  '2018/12/18', '2018/12/3', '2018/2/15', '2018/2/5', '2018/3/18', '2018/4/14', '2018/4/2', '2018/5/16',
                  '2018/5/26', '2018/5/29', '2018/7/28', '2018/7/9', '2018/8/27', '2018/9/3']}

print(data3['role_parameters']['guest']['dataio_0']['label_name'])


x = 'x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,y'
y = '171,243,2019-06-05,355,54,33,0.997547029,7,15,7,2019,6,5'
print(len(x.split(',')))
print(len(y.split(',')))
